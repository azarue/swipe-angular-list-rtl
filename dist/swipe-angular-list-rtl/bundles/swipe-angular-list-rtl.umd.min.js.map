{"version":3,"sources":["../../../projects/swipe-angular-list-rtl/src/lib/swipe-angular-list.service.ts","../../../projects/swipe-angular-list-rtl/src/lib/swipe-angular-list.component.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/swipe-angular-list-rtl/src/lib/swipe-service.service.ts","../../../projects/swipe-angular-list-rtl/src/lib/item-list/item-list.component.html","../../../projects/swipe-angular-list-rtl/src/lib/item-list/item-list.component.ts","../../../../../packages/platform-browser/src/browser/browser_adapter.ts","../../../../../packages/platform-browser/src/browser/generic_browser_adapter.ts","../../../../../packages/platform-browser/src/browser/server-transition.ts","../../../../../packages/platform-browser/src/browser/testability.ts","../../../../../packages/platform-browser/src/dom/util.ts","../../../../../packages/platform-browser/src/dom/debug/ng_probe.ts","../../../../../packages/platform-browser/src/dom/events/event_manager.ts","../../../../../packages/platform-browser/src/dom/shared_styles_host.ts","../../../../../packages/platform-browser/src/dom/dom_renderer.ts","../../../../../packages/platform-browser/src/dom/events/dom_events.ts","../../../../../packages/platform-browser/src/dom/events/hammer_gestures.ts","../../../../../packages/platform-browser/src/dom/events/key_events.ts","../../../../../packages/platform-browser/src/security/dom_sanitization_service.ts","../../../../../packages/platform-browser/src/browser.ts","../../../../../packages/platform-browser/src/browser/meta.ts","../../../../../packages/platform-browser/src/browser/title.ts","../../../../../packages/platform-browser/src/browser/tools/browser.ts","../../../../../packages/platform-browser/src/browser/tools/common_tools.ts","../../../../../packages/platform-browser/src/browser/transfer_state.ts","../../../../../packages/platform-browser/src/dom/debug/by.ts","../../../../../packages/platform-browser/src/version.ts","../../../projects/swipe-angular-list-rtl/src/lib/swipe-angular-list.module.ts"],"names":["SwipeAngularListService","factory","ɵfac","providedIn","SwipeAngularListComponent","prototype","ngOnInit","selectors","decls","vars","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","ar","next","done","push","value","error","__spread","arguments","length","concat","SwipeServiceService","swipeObserver","EventEmitter","closeAll","id","emit","i0.ɵɵelement","i0.ɵɵpropertyInterpolate","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵelementContainer","ItemListComponent","elRef","swService","_this","alive","selfElement","idElement","disabledMark","showMark","rtl","itemClass","callback","swClick","random","Math","toString","substring","getParent","arr","Promise","resolve","reject","map","a","test","swipeleft","res","result","deltaX","swiperight","clickItem","action","opt","inside","console","log","nativeElement","setAttribute","subscribe","clickOut","event","contains","target","ngAfterViewInit","mark","markTemplate","viewMark","defaultMark","createEmbeddedView","viewContainerMark","insert","notMarkTemplate","defaultNotMark","editTemplate","viewEdit","viewContainerEdit","defaultEdit","trashTemplate","viewTrash","viewContainerTrash","defaultTrash","setTimeout","customTemplate","dataInside","assign","touch","viewCustomTemplate","item","rootNodes","children","childNodes","forEach","viewContainerCustom","defaultCustom","i0","ɵɵdirectiveInject","ElementRef","viewQuery","ViewContainerRef","$event","ɵɵresolveDocument","i0.ɵɵclassMap","i0.ɵɵproperty","urlParsingNode","GenericBrowserDomAdapter","_super","DomAdapter","supportsDOMEvents","global","BrowserDomAdapter","makeCurrent","setRootDomAdapter","getProperty","el","name","window","logGroup","group","logGroupEnd","groupEnd","onAndCancel","evt","listener","addEventListener","removeEventListener","dispatchEvent","remove","node","parentNode","removeChild","getValue","createElement","tagName","doc","getDefaultDocument","createHtmlDocument","document","implementation","createHTMLDocument","isElementNode","nodeType","Node","ELEMENT_NODE","isShadowRoot","DocumentFragment","getGlobalEventTarget","body","getHistory","history","getLocation","location","getBaseHref","href","baseElement","querySelector","getAttribute","getBaseElementHref","url","pathname","charAt","relativePath","resetBaseElement","getUserAgent","navigator","userAgent","performanceNow","performance","now","Date","getTime","supportsCookies","getCookie","parseCookieValue","cookie","TRANSITION_ID","InjectionToken","SERVER_TRANSITION_PROVIDERS","provide","APP_INITIALIZER","useFactory","transitionId","injector","get","ApplicationInitStatus","donePromise","then","dom","getDOM","slice","apply","querySelectorAll","filter","deps","DOCUMENT","Injector","multi","BrowserGetTestability","init","setTestabilityGetter","addToWindow","registry","elem","findInAncestors","testability","findTestabilityInTree","Error","getAllTestabilities","getAllRootElements","testabilities","count","didWork","decrement","didWork_","whenStable","t","getTestability","host","parentElement","exportNgVar","COMPILED","CORE_TOKENS","ApplicationRef","NgZone","inspectNativeElementR2","element","ɵgetDebugNodeR2","ELEMENT_PROBE_PROVIDERS","coreTokens","reduce","prev","token","NgProbeToken","Optional","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_eventNameToPlugin","Map","manager","_plugins","reverse","eventName","handler","_findPluginFor","addGlobalEventListener","getZone","plugin","plugin_1","supports","set","Injectable","Inject","args","EventManagerPlugin","_doc","SharedStylesHost","_stylesSet","Set","addStyles","styles","additions","style","has","add","onStylesAdded","getAllStyles","from","DomSharedStylesHost","_hostNodes","_styleNodes","head","_addStylesToHost","styleEl","textContent","appendChild","addHost","hostNode","removeHost","delete","ngOnDestroy","styleNode","NAMESPACE_URIS","svg","xhtml","xlink","xml","xmlns","COMPONENT_REGEX","NG_DEV_MODE","ngDevMode","HOST_ATTR","CONTENT_ATTR","flattenStyles","compId","isArray","replace","decoratePreventDefault","eventHandler","preventDefault","returnValue","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","defaultRenderer","DefaultDomRenderer2","createRenderer","type","encapsulation","ViewEncapsulation","Emulated","renderer","EmulatedEncapsulationDomRenderer2","applyToHost","Native","ShadowDom","ShadowDomRenderer","begin","end","APP_ID","data","destroy","namespace","createElementNS","createComment","createText","createTextNode","parent","newChild","insertBefore","refChild","oldChild","selectRootElement","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttribute","removeAttributeNS","addClass","classList","removeClass","setStyle","flags","RendererStyleFlags2","DashCase","setProperty","Important","removeStyle","removeProperty","checkNoSyntheticProp","setValue","nodeValue","listen","AT_CHARCODE","charCodeAt","nameKind","component","componentShortId","contentAttr","hostAttr","shimHostAttribute","hostEl","shadowRoot","attachShadow","mode","createShadowRoot","nodeOrShadowRoot","DomEventsPlugin","EVENT_NAMES","pan","panstart","panmove","panend","pancancel","panleft","panright","panup","pandown","pinch","pinchstart","pinchmove","pinchend","pinchcancel","pinchin","pinchout","press","pressup","rotate","rotatestart","rotatemove","rotateend","rotatecancel","swipe","swipeup","swipedown","tap","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","buildHammer","mc","Hammer","options","enable","HammerGesturesPlugin","_config","loader","toLowerCase","isCustomEvent","warn","zone","cancelRegistration_1","deregister_1","catch","runOutsideAngular","eventObj","runGuarded","on","off","indexOf","decorators","Console","HAMMER_PROVIDERS__PRE_R3__","useClass","HAMMER_PROVIDERS","NgModule","MODIFIER_KEYS","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","_chromeNumKeyPadMap","A","B","C","D","E","F","G","H","I","J","K","M","N","O","`","","MODIFIER_KEY_GETTERS","alt","altKey","control","ctrlKey","meta","metaKey","shift","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","parts","split","domEventName","key","_normalizeKey","pop","fullKey","modifierName","index","splice","getEventFullKey","keyIdentifier","startsWith","fromCharCode","parseInt","getEventKey","modifierGetter","keyName","domSanitizerImplFactory","DomSanitizerImpl","useExisting","forwardRef","sanitize","SecurityContext","NONE","HTML","allowSanitizationBypassOrThrow","unwrapSafeValue","_sanitizeHtml","STYLE","SCRIPT","URL","getSanitizationBypassType","_sanitizeUrl","RESOURCE_URL","bypassSecurityTrustHtml","bypassSanitizationTrustHtml","bypassSecurityTrustStyle","bypassSanitizationTrustStyle","bypassSecurityTrustScript","bypassSanitizationTrustScript","bypassSecurityTrustUrl","bypassSanitizationTrustUrl","bypassSecurityTrustResourceUrl","bypassSanitizationTrustResourceUrl","DomSanitizer","PLATFORM_BROWSER_ID","INTERNAL_BROWSER_PLATFORM_PROVIDERS","PLATFORM_ID","useValue","ɵ0$4","PLATFORM_INITIALIZER","ɵsetDocument","BROWSER_SANITIZATION_PROVIDERS","Sanitizer","BROWSER_MODULE_PROVIDERS","createPlatformFactory","platformCore","INJECTOR_SCOPE","ErrorHandler","RendererFactory2","Testability","BrowserModule","parentModule","withServerTransition","params","ngModule","providers","createMeta","Meta","ɵɵinject","exports","CommonModule","ApplicationModule","SkipSelf","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","tags","getTag","attrSelector","getTags","list","updateTag","selector","_parseSelector","_setMetaElementAttributes","removeTag","removeTagElement","_containsAttributes","getElementsByTagName","keys","prop","attr","every","createTitle","Title","getTitle","title","setTitle","newTitle","win","msPerTick","numTicks","AngularProfiler","ref","appRef","timeChangeDetection","config","record","profileName","isProfilerAvailable","profile","start","tick","profileEnd","toFixed","ChangeDetectionPerfRecord","TransferState","store","onSerializeCallbacks","initState","transferState","defaultValue","undefined","hasKey","onSerialize","toJson","JSON","stringify","By","all","css","debugElement","matches","msMatchesSelector","webkitMatchesSelector","elementMatches","directive","debugNode","providerTokens","Version","HammerConfig","SwipeAngularListModule","imports","declarations"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwipeAngularListService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sw-swipe-angular-list',\n  template: `\n    <p>\n      swipe-angular-list works!\n    </p>\n  `,\n  styles: []\n})\nexport class SwipeAngularListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import {EventEmitter, Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwipeServiceService {\n  swipeObserver: EventEmitter<number> = new EventEmitter();\n\n  constructor() {\n  }\n\n  closeAll(id) {\n    this.swipeObserver.emit(id);\n  }\n}\n","<div class=\"{{itemClass}}\" (swipeleft)=\"swipeleft($event) \" (swiperight)=\"swiperight($event)\" (swipe)=\"rtl && rtl == true ? swiperight($event) : swipeleft($event)\" >\n  <ng-template #defaultEdit>\n    edit\n  </ng-template>\n  <ng-template #defaultTrash>\n    trash\n  </ng-template>\n  <ng-template #defaultMark>\n    <div class=\"yes-marker\"></div>\n  </ng-template>\n  <ng-template #defaultNotMark>\n    <div class=\"not-marker\"></div>\n  </ng-template>\n\n  <ng-template #defaultCustom>\n    <div data-id=\"{{idElement}}\" class=\"text truncate\">{{inside?.title }} </div>\n    <div data-id=\"{{idElement}}\" class=\"small truncate\">{{inside?.subTitle}}</div>\n  </ng-template>\n \n\n  <div [ngClass]=\"{'active':(result)}\" data-id=\"{{idElement}}\"\n       class=\" options-btn swipe-d-flex justify-content-between\"\n       class=\"{{rtl && rtl == true ? 'rtl' : ''}}\">\n    <div (click)=\"action('edit')\" class=\"option-list\" *ngIf=\"editTemplate !== null\">\n      <ng-template let-show=\"show\" #viewContainerEdit></ng-template>\n    </div>\n    <div (click)=\"action('trash')\" class=\"option-list\" *ngIf=\"trashTemplate !== null\">\n      <ng-template let-show=\"show\" #viewContainerTrash></ng-template>\n    </div>\n  </div>\n  <div [ngClass]=\"{'swipe':(result)}\" class=\"{{rtl && rtl == true ? 'rtl' : ''}}\" data-id=\"{{idElement}}\" class=\"list-swipe swipe-d-flex\">\n\n    <div *ngIf=\"showMark\" class=\"swipe-w-10\">\n      <ng-container #viewContainerMark></ng-container>\n    </div>\n\n    <div (click)=\"clickItem($event)\" [ngClass]=\"{'swipe-w-90':showMark, 'swipe-w-100':!showMark}\">\n      <div *ngIf=\"customTemplate\" data-id=\"{{idElement}}\">\n        <ng-template #viewContainerCustom>\n        </ng-template>\n      </div>\n\n      <div *ngIf=\"!customTemplate\">\n        <ng-template #viewContainerCustom></ng-template>\n      </div>\n\n    </div>\n    <div class=\"mark\" class=\"{{rtl && rtl == true? 'rtl' : ''}}\"></div>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild, ViewContainerRef\n} from '@angular/core';\nimport {SwipeServiceService} from '../swipe-service.service';\n\n@Component({\n  selector: 'sw-item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.css']\n})\nexport class ItemListComponent implements AfterViewInit {\n  alive = true;\n  result: boolean;\n  selfElement = null;\n  idElement = null;\n  @Input() inside: {\n    id,\n    title: '',\n    subTitle: '',\n    mark: false,\n  };\n\n  @Input('disable-mark') disabledMark = false;\n\n  @Input('show-mark') showMark = false;\n  @Input('rtl') rtl = false;\n  @Input('item-class') itemClass = '';\n \n  // @ts-ignore\n  @ViewChild('defaultEdit') defaultEdit: TemplateRef<any>;\n  // @ts-ignore\n  @ViewChild('defaultTrash') defaultTrash: TemplateRef<any>;\n\n  // @ts-ignore\n  @ViewChild('defaultMark') defaultMark: TemplateRef<any>;\n  // @ts-ignore\n  @ViewChild('defaultNotMark') defaultNotMark: TemplateRef<any>;\n  // @ts-ignore\n  @ViewChild('defaultCustom') defaultCustom: TemplateRef<any>;\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('customTemplate') customTemplate: TemplateRef<any>;\n  // tslint:disable-next-line:no-input-rename\n  @Input('editTemplate') editTemplate: TemplateRef<any>;\n  // tslint:disable-next-line:no-input-rename\n  @Input('trashTemplate') trashTemplate: TemplateRef<any>;\n  // tslint:disable-next-line:no-input-rename\n  @Input('markTemplate') markTemplate: TemplateRef<any>;\n  // tslint:disable-next-line:no-input-rename\n  @Input('notMarkTemplate') notMarkTemplate: TemplateRef<any>;\n\n  @Output()\n  callback = new EventEmitter<any>();\n\n  @Output()\n  swClick = new EventEmitter<any>();\n\n  @ViewChild('viewContainerEdit', {static: false, read: ViewContainerRef})\n  viewContainerEdit: ViewContainerRef;\n\n  @ViewChild('viewContainerTrash', {static: false, read: ViewContainerRef})\n  viewContainerTrash: ViewContainerRef;\n\n  @ViewChild('viewContainerMark', {static: false, read: ViewContainerRef})\n  viewContainerMark: ViewContainerRef;\n\n  @ViewChild('viewContainerCustom', {static: false, read: ViewContainerRef})\n  viewContainerCustom: ViewContainerRef;\n\n  // @ViewChild('tpl') tpl: TemplateRef<any>\n\n  @HostListener('document:click', ['$event'])\n  clickOut(event) {\n    if (!this.selfElement.contains(event.target)) {\n      this.result = false;\n    }\n  }\n\n  constructor(elRef: ElementRef, private swService: SwipeServiceService) {\n    this.selfElement = elRef.nativeElement;\n    this.idElement = `list-swipe-${this.random()}`;\n    this.selfElement.setAttribute('data-id', this.idElement);\n    this.selfElement.id = this.idElement;\n    this.swService.swipeObserver.subscribe(a => {\n      if (a !== this.selfElement.id) {\n        this.result = false;\n      }\n    });\n  }\n\n  private random = () => {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  };\n\n  private getParent = (arr = []) => {\n    return new Promise((resolve, reject) => {\n      arr.map(a => {\n        if (/list-swipe/.test(a.id)) {\n          resolve(a.id);\n        }\n      });\n    });\n\n  };\n\n  public swipeleft = (res:any) => {\n    this.swService.closeAll(this.selfElement.id);\n        if (!this.disabledMark) {\n          this.result = (res.deltaX < 0);\n        }\n  }\n  public swiperight = (res:any) => {\n    this.swService.closeAll(this.selfElement.id);\n        if (!this.disabledMark) {\n          this.result = (res.deltaX > 0);\n        }\n  }\n\n  clickItem = (a: any) => this.swClick.emit(a);\n\n  action = (opt = '') => {\n    try {\n      this.result = false;\n      const {id} = this.inside;\n      if (opt === 'edit') {\n        \n        this.callback.emit({action: 'edit', value: id});\n      } else if (opt === 'trash') {\n        this.callback.emit({action: 'trash', value: id});\n      }\n    } catch (e) {\n      console.log('Debes definir ID de edit, y trash');\n    }\n  };\n\n  ngAfterViewInit(): void {\n    if (this.showMark) {\n      if (this.inside.mark && !this.markTemplate) {\n        const viewMark = this.defaultMark.createEmbeddedView(null);\n        this.viewContainerMark.insert(viewMark);\n      } else if (this.inside.mark && this.markTemplate) {\n        const viewMark = this.markTemplate.createEmbeddedView(null);\n        this.viewContainerMark.insert(viewMark);\n      }\n\n      if (!this.inside.mark && !this.notMarkTemplate) {\n        const viewMark = this.defaultNotMark.createEmbeddedView(null);\n        this.viewContainerMark.insert(viewMark);\n      } else if (!this.inside.mark && this.notMarkTemplate) {\n        const viewMark = this.notMarkTemplate.createEmbeddedView(null);\n        this.viewContainerMark.insert(viewMark);\n      }\n    }\n\n    if (this.editTemplate) {\n      const viewEdit = this.editTemplate.createEmbeddedView(null);\n      if (this.viewContainerEdit) {\n        this.viewContainerEdit.insert(viewEdit);\n      }\n    } else if (this.editTemplate !== null) {\n      const viewEdit = this.defaultEdit.createEmbeddedView(null);\n      this.viewContainerEdit.insert(viewEdit);\n    }\n\n    if (this.trashTemplate) {\n      const viewTrash = this.trashTemplate.createEmbeddedView(null);\n      if (this.viewContainerTrash) {\n        this.viewContainerTrash.insert(viewTrash);\n      }\n    } else if (this.trashTemplate !== null) {\n      const viewTrash = this.defaultTrash.createEmbeddedView(null);\n      this.viewContainerTrash.insert(viewTrash);\n    }\n\n    setTimeout(() => {\n      if (this.customTemplate) { // Si tiene\n        const dataInside = {...this.inside, ...{touch: this.selfElement.id}};\n        const viewCustomTemplate = this.customTemplate.createEmbeddedView({\n          item: dataInside,\n          id: this.selfElement.id\n        });\n        // @ts-ignore\n        if (viewCustomTemplate && viewCustomTemplate.rootNodes) {\n          // @ts-ignore\n          viewCustomTemplate.rootNodes.map(e => {\n            e.id = this.selfElement.id;\n            e.children[0].childNodes.forEach(b => {\n              if (b) {\n                b.id = this.selfElement.id;\n                if (b.children.length) {\n                  b.children[0].id = this.selfElement.id;\n                }\n              }\n            });\n          });\n        }\n\n        if (viewCustomTemplate) {\n          this.viewContainerCustom.insert(viewCustomTemplate);\n        }\n      } else {\n        const viewCustomTemplate = this.defaultCustom.createEmbeddedView(null);\n        this.viewContainerCustom.insert(viewCustomTemplate);\n      }\n    }, 50);\n\n\n    // const hammer = new Hammer(this.selfElement);\n\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵparseCookieValue as parseCookieValue, ɵsetRootDomAdapter as setRootDomAdapter} from '@angular/common';\nimport {ɵglobal as global} from '@angular/core';\n\nimport {GenericBrowserDomAdapter} from './generic_browser_adapter';\n\nconst nodeContains: (this: Node, other: Node) => boolean = (() => {\n  if (global['Node']) {\n    return global['Node'].prototype.contains || function(this: Node, node: any) {\n      return !!(this.compareDocumentPosition(node) & 16);\n    };\n  }\n\n  return undefined as any;\n})();\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nexport class BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    setRootDomAdapter(new BrowserDomAdapter());\n  }\n  getProperty(el: Node, name: string): any {\n    return (<any>el)[name];\n  }\n\n  log(error: string): void {\n    if (window.console) {\n      window.console.log && window.console.log(error);\n    }\n  }\n\n  logGroup(error: string): void {\n    if (window.console) {\n      window.console.group && window.console.group(error);\n    }\n  }\n\n  logGroupEnd(): void {\n    if (window.console) {\n      window.console.groupEnd && window.console.groupEnd();\n    }\n  }\n\n  onAndCancel(el: Node, evt: any, listener: any): Function {\n    el.addEventListener(evt, listener, false);\n    // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n    return () => {\n      el.removeEventListener(evt, listener, false);\n    };\n  }\n  dispatchEvent(el: Node, evt: any) {\n    el.dispatchEvent(evt);\n  }\n  remove(node: Node): Node {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n    return node;\n  }\n  getValue(el: any): string {\n    return el.value;\n  }\n  createElement(tagName: string, doc?: Document): HTMLElement {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createHtmlDocument(): HTMLDocument {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument(): Document {\n    return document;\n  }\n\n  isElementNode(node: Node): boolean {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n\n  isShadowRoot(node: any): boolean {\n    return node instanceof DocumentFragment;\n  }\n\n  getGlobalEventTarget(doc: Document, target: string): EventTarget|null {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getHistory(): History {\n    return window.history;\n  }\n  getLocation(): Location {\n    return window.location;\n  }\n  getBaseHref(doc: Document): string|null {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement(): void {\n    baseElement = null;\n  }\n  getUserAgent(): string {\n    return window.navigator.userAgent;\n  }\n  performanceNow(): number {\n    // performance.now() is not available in all browsers, see\n    // http://caniuse.com/#search=performance.now\n    return window.performance && window.performance.now ? window.performance.now() :\n                                                          new Date().getTime();\n  }\n\n  supportsCookies(): boolean {\n    return true;\n  }\n\n  getCookie(name: string): string|null {\n    return parseCookieValue(document.cookie, name);\n  }\n}\n\nlet baseElement: HTMLElement|null = null;\nfunction getBaseElementHref(): string|null {\n  if (!baseElement) {\n    baseElement = document.querySelector('base')!;\n    if (!baseElement) {\n      return null;\n    }\n  }\n  return baseElement.getAttribute('href');\n}\n\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode: any;\nfunction relativePath(url: any): string {\n  if (!urlParsingNode) {\n    urlParsingNode = document.createElement('a');\n  }\n  urlParsingNode.setAttribute('href', url);\n  return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n                                                       '/' + urlParsingNode.pathname;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵDomAdapter as DomAdapter} from '@angular/common';\n\n\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport abstract class GenericBrowserDomAdapter extends DomAdapter {\n  constructor() {\n    super();\n  }\n\n  supportsDOMEvents(): boolean {\n    return true;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {APP_INITIALIZER, ApplicationInitStatus, Inject, InjectionToken, Injector, StaticProvider} from '@angular/core';\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nexport const TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n\nexport function appInitializerFactory(transitionId: string, document: any, injector: Injector) {\n  return () => {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(() => {\n      const dom = getDOM();\n      const styles: any[] =\n          Array.prototype.slice.apply(document.querySelectorAll(`style[ng-transition]`));\n      styles.filter(el => el.getAttribute('ng-transition') === transitionId)\n          .forEach(el => dom.remove(el));\n    });\n  };\n}\n\nexport const SERVER_TRANSITION_PROVIDERS: StaticProvider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: appInitializerFactory,\n    deps: [TRANSITION_ID, DOCUMENT, Injector],\n    multi: true\n  },\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {GetTestability, setTestabilityGetter, Testability, TestabilityRegistry, ɵglobal as global} from '@angular/core';\n\nexport class BrowserGetTestability implements GetTestability {\n  static init() {\n    setTestabilityGetter(new BrowserGetTestability());\n  }\n\n  addToWindow(registry: TestabilityRegistry): void {\n    global['getAngularTestability'] = (elem: any, findInAncestors: boolean = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return testability;\n    };\n\n    global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const whenAllStable = (callback: any /** TODO #9100 */) => {\n      const testabilities = global['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      let didWork = false;\n      const decrement = function(didWork_: any /** TODO #9100 */) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach(function(testability: any /** TODO #9100 */) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!global['frameworkStabilizers']) {\n      global['frameworkStabilizers'] = [];\n    }\n    global['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (getDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, (<any>elem).host, true);\n    }\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵglobal as global} from '@angular/core';\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\n\n\nexport function camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: string[]) => '-' + m[1].toLowerCase());\n}\n\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: string[]) => m[1].toUpperCase());\n}\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nexport function exportNgVar(name: string, value: any): void {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = global['ng'] = (global['ng'] as {[key: string]: any} | undefined) || {};\n    ng[name] = value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_INITIALIZER, ApplicationRef, DebugNode, NgProbeToken, NgZone, Optional, Provider, ɵgetDebugNodeR2} from '@angular/core';\n\nimport {exportNgVar} from '../util';\n\nconst CORE_TOKENS = (() => ({\n                       'ApplicationRef': ApplicationRef,\n                       'NgZone': NgZone,\n                     }))();\n\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nexport function inspectNativeElementR2(element: any): DebugNode|null {\n  return ɵgetDebugNodeR2(element);\n}\n\nexport function _createNgProbeR2(coreTokens: NgProbeToken[]): any {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, {...CORE_TOKENS, ..._ngProbeTokensToMap(coreTokens || [])});\n  return () => inspectNativeElementR2;\n}\n\nfunction _ngProbeTokensToMap(tokens: NgProbeToken[]): {[name: string]: any} {\n  return tokens.reduce((prev: any, t: any) => (prev[t.name] = t.token, prev), {});\n}\n\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\nexport const ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const ELEMENT_PROBE_PROVIDERS__PRE_R3__: Provider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: _createNgProbeR2,\n    deps: [\n      [NgProbeToken, new Optional()],\n    ],\n    multi: true,\n  },\n];\n\nexport const ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__PRE_R3__;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, NgZone} from '@angular/core';\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nexport const EVENT_MANAGER_PLUGINS =\n    new InjectionToken<EventManagerPlugin[]>('EventManagerPlugins');\n\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n@Injectable()\nexport class EventManager {\n  private _plugins: EventManagerPlugin[];\n  private _eventNameToPlugin = new Map<string, EventManagerPlugin>();\n\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(@Inject(EVENT_MANAGER_PLUGINS) plugins: EventManagerPlugin[], private _zone: NgZone) {\n    plugins.forEach(p => p.manager = this);\n    this._plugins = plugins.slice().reverse();\n  }\n\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n\n  /**\n   * Registers a global handler for an event in a target view.\n   *\n   * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns A callback function that can be used to remove the handler.\n   */\n  addGlobalEventListener(target: string, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n  getZone(): NgZone {\n    return this._zone;\n  }\n\n  /** @internal */\n  _findPluginFor(eventName: string): EventManagerPlugin {\n    const plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n\n    const plugins = this._plugins;\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n      if (plugin.supports(eventName)) {\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n      }\n    }\n    throw new Error(`No event manager plugin found for event ${eventName}`);\n  }\n}\n\nexport abstract class EventManagerPlugin {\n  constructor(private _doc: any) {}\n\n  // TODO(issue/24571): remove '!'.\n  manager!: EventManager;\n\n  abstract supports(eventName: string): boolean;\n\n  abstract addEventListener(element: HTMLElement, eventName: string, handler: Function): Function;\n\n  addGlobalEventListener(element: string, eventName: string, handler: Function): Function {\n    const target: HTMLElement = getDOM().getGlobalEventTarget(this._doc, element);\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n    return this.addEventListener(target, eventName, handler);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\n\n@Injectable()\nexport class SharedStylesHost {\n  /** @internal */\n  protected _stylesSet = new Set<string>();\n\n  addStyles(styles: string[]): void {\n    const additions = new Set<string>();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n\n  onStylesAdded(additions: Set<string>): void {}\n\n  getAllStyles(): string[] {\n    return Array.from(this._stylesSet);\n  }\n}\n\n@Injectable()\nexport class DomSharedStylesHost extends SharedStylesHost implements OnDestroy {\n  private _hostNodes = new Set<Node>();\n  private _styleNodes = new Set<Node>();\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._hostNodes.add(_doc.head);\n  }\n\n  private _addStylesToHost(styles: Set<string>, host: Node): void {\n    styles.forEach((style: string) => {\n      const styleEl = this._doc.createElement('style');\n      styleEl.textContent = style;\n      this._styleNodes.add(host.appendChild(styleEl));\n    });\n  }\n\n  addHost(hostNode: Node): void {\n    this._addStylesToHost(this._stylesSet, hostNode);\n    this._hostNodes.add(hostNode);\n  }\n\n  removeHost(hostNode: Node): void {\n    this._hostNodes.delete(hostNode);\n  }\n\n  onStylesAdded(additions: Set<string>): void {\n    this._hostNodes.forEach(hostNode => this._addStylesToHost(additions, hostNode));\n  }\n\n  ngOnDestroy(): void {\n    this._styleNodes.forEach(styleNode => getDOM().remove(styleNode));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_ID, Inject, Injectable, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, ViewEncapsulation} from '@angular/core';\n\nimport {EventManager} from './events/event_manager';\nimport {DomSharedStylesHost} from './shared_styles_host';\n\nexport const NAMESPACE_URIS: {[ns: string]: string} = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\n\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n\nexport const COMPONENT_VARIABLE = '%COMP%';\nexport const HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\nexport function shimContentAttribute(componentShortId: string): string {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function shimHostAttribute(componentShortId: string): string {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function flattenStyles(\n    compId: string, styles: Array<any|any[]>, target: string[]): string[] {\n  for (let i = 0; i < styles.length; i++) {\n    let style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n  return target;\n}\n\nfunction decoratePreventDefault(eventHandler: Function): Function {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return (event: any) => {\n    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n    // can inspect the listener toString contents for the existence of this special token. Because\n    // the token is a string literal, it is ensured to not be modified by compiled code.\n    if (event === '__ngUnwrap__') {\n      return eventHandler;\n    }\n\n    const allowDefaultBehavior = eventHandler(event);\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n\n    return undefined;\n  };\n}\n\n@Injectable()\nexport class DomRendererFactory2 implements RendererFactory2 {\n  private rendererByCompId = new Map<string, Renderer2>();\n  private defaultRenderer: Renderer2;\n\n  constructor(\n      private eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost,\n      @Inject(APP_ID) private appId: string) {\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n\n  createRenderer(element: any, type: RendererType2|null): Renderer2 {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated: {\n        let renderer = this.rendererByCompId.get(type.id);\n        if (!renderer) {\n          renderer = new EmulatedEncapsulationDomRenderer2(\n              this.eventManager, this.sharedStylesHost, type, this.appId);\n          this.rendererByCompId.set(type.id, renderer);\n        }\n        (<EmulatedEncapsulationDomRenderer2>renderer).applyToHost(element);\n        return renderer;\n      }\n      case ViewEncapsulation.Native:\n      case ViewEncapsulation.ShadowDom:\n        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n      default: {\n        if (!this.rendererByCompId.has(type.id)) {\n          const styles = flattenStyles(type.id, type.styles, []);\n          this.sharedStylesHost.addStyles(styles);\n          this.rendererByCompId.set(type.id, this.defaultRenderer);\n        }\n        return this.defaultRenderer;\n      }\n    }\n  }\n\n  begin() {}\n  end() {}\n}\n\nclass DefaultDomRenderer2 implements Renderer2 {\n  data: {[key: string]: any} = Object.create(null);\n\n  constructor(private eventManager: EventManager) {}\n\n  destroy(): void {}\n\n  destroyNode: null;\n\n  createElement(name: string, namespace?: string): any {\n    if (namespace) {\n      // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n      // will result in undefined, so we just return the namespace here.\n      return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n\n    return document.createElement(name);\n  }\n\n  createComment(value: string): any {\n    return document.createComment(value);\n  }\n\n  createText(value: string): any {\n    return document.createTextNode(value);\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    parent.appendChild(newChild);\n  }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    if (parent) {\n      parent.insertBefore(newChild, refChild);\n    }\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n\n  selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any {\n    let el: any = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n                                                       selectorOrNode;\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n\n  parentNode(node: any): any {\n    return node.parentNode;\n  }\n\n  nextSibling(node: any): any {\n    return node.nextSibling;\n  }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (namespace) {\n      name = namespace + ':' + name;\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    if (namespace) {\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n        // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n        // which is wrong.\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n\n  addClass(el: any, name: string): void {\n    el.classList.add(name);\n  }\n\n  removeClass(el: any, name: string): void {\n    el.classList.remove(name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.setProperty(\n          style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      el.style[style] = '';\n    }\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n\n  setValue(node: any, value: string): void {\n    node.nodeValue = value;\n  }\n\n  listen(target: 'window'|'document'|'body'|any, event: string, callback: (event: any) => boolean):\n      () => void {\n    NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      return <() => void>this.eventManager.addGlobalEventListener(\n          target, event, decoratePreventDefault(callback));\n    }\n    return <() => void>this.eventManager.addEventListener(\n               target, event, decoratePreventDefault(callback)) as () => void;\n  }\n}\n\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name: string, nameKind: string) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(`Found the synthetic ${nameKind} ${\n        name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n  }\n}\n\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n  private contentAttr: string;\n  private hostAttr: string;\n\n  constructor(\n      eventManager: EventManager, sharedStylesHost: DomSharedStylesHost,\n      private component: RendererType2, appId: string) {\n    super(eventManager);\n    const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n\n    this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n  }\n\n  applyToHost(element: any) {\n    super.setAttribute(element, this.hostAttr, '');\n  }\n\n  createElement(parent: any, name: string): Element {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  private shadowRoot: any;\n\n  constructor(\n      eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost,\n      private hostEl: any, private component: RendererType2) {\n    super(eventManager);\n    if (component.encapsulation === ViewEncapsulation.ShadowDom) {\n      this.shadowRoot = (hostEl as any).attachShadow({mode: 'open'});\n    } else {\n      this.shadowRoot = (hostEl as any).createShadowRoot();\n    }\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = flattenStyles(component.id, component.styles, []);\n    for (let i = 0; i < styles.length; i++) {\n      const styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n\n  private nodeOrShadowRoot(node: any): any {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  removeChild(parent: any, oldChild: any): void {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n  parentNode(node: any): any {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nimport {EventManagerPlugin} from './event_manager';\n\n@Injectable()\nexport class DomEventsPlugin extends EventManagerPlugin {\n  constructor(@Inject(DOCUMENT) doc: any) {\n    super(doc);\n  }\n\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName: string): boolean {\n    return true;\n  }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    element.addEventListener(eventName, handler as EventListener, false);\n    return () => this.removeEventListener(element, eventName, handler as EventListener);\n  }\n\n  removeEventListener(target: any, eventName: string, callback: Function): void {\n    return target.removeEventListener(eventName, callback as EventListener);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, NgModule, Optional, Provider, ɵConsole as Console} from '@angular/core';\n\nimport {EVENT_MANAGER_PLUGINS, EventManagerPlugin} from './event_manager';\n\n\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n};\n\n/**\n * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nexport const HAMMER_GESTURE_CONFIG = new InjectionToken<HammerGestureConfig>('HammerGestureConfig');\n\n\n/**\n * Function that loads HammerJS, returning a promise that is resolved once HammerJs is loaded.\n *\n * @publicApi\n */\nexport type HammerLoader = () => Promise<void>;\n\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nexport const HAMMER_LOADER = new InjectionToken<HammerLoader>('HammerLoader');\n\nexport interface HammerInstance {\n  on(eventName: string, callback?: Function): void;\n  off(eventName: string, callback?: Function): void;\n  destroy?(): void;\n}\n\n/**\n * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n@Injectable()\nexport class HammerGestureConfig {\n  /**\n   * A set of supported event names for gestures to be used in Angular.\n   * Angular supports all built-in recognizers, as listed in\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   */\n  events: string[] = [];\n\n  /**\n   * Maps gesture event names to a set of configuration options\n   * that specify overrides to the default values for specific properties.\n   *\n   * The key is a supported event name to be configured,\n   * and the options object contains a set of properties, with override values\n   * to be applied to the named recognizer event.\n   * For example, to disable recognition of the rotate event, specify\n   *  `{\"rotate\": {\"enable\": false}}`.\n   *\n   * Properties that are not present take the HammerJS default values.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   *\n   */\n  overrides: {[key: string]: Object} = {};\n\n  /**\n   * Properties whose default values can be overridden for a given event.\n   * Different sets of properties apply to different events.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   */\n  options?: {\n    cssProps?: any;\n    domEvents?: boolean;\n    enable?: boolean | ((manager: any) => boolean);\n    preset?: any[];\n    touchAction?: string;\n    recognizers?: any[];\n    inputClass?: any;\n    inputTarget?: EventTarget;\n  };\n\n  /**\n   * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const mc = new Hammer!(element, this.options);\n\n    mc.get('pinch').set({enable: true});\n    mc.get('rotate').set({enable: true});\n\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\n}\n\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\n@Injectable()\nexport class HammerGesturesPlugin extends EventManagerPlugin {\n  constructor(\n      @Inject(DOCUMENT) doc: any,\n      @Inject(HAMMER_GESTURE_CONFIG) private _config: HammerGestureConfig, private console: Console,\n      @Optional() @Inject(HAMMER_LOADER) private loader?: HammerLoader|null) {\n    super(doc);\n  }\n\n  supports(eventName: string): boolean {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!(window as any).Hammer && !this.loader) {\n      this.console.warn(\n          `The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n          `loaded and no custom loader has been specified.`);\n      return false;\n    }\n\n    return true;\n  }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n\n    // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n    if (!(window as any).Hammer && this.loader) {\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n      let cancelRegistration = false;\n      let deregister: Function = () => {\n        cancelRegistration = true;\n      };\n\n      this.loader()\n          .then(() => {\n            // If Hammer isn't actually loaded when the custom loader resolves, give up.\n            if (!(window as any).Hammer) {\n              this.console.warn(\n                  `The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n              deregister = () => {};\n              return;\n            }\n\n            if (!cancelRegistration) {\n              // Now that Hammer is loaded and the listener is being loaded for real,\n              // the deregistration function changes from canceling registration to removal.\n              deregister = this.addEventListener(element, eventName, handler);\n            }\n          })\n          .catch(() => {\n            this.console.warn(\n                `The \"${eventName}\" event cannot be bound because the custom ` +\n                `Hammer.JS loader failed.`);\n            deregister = () => {};\n          });\n\n      // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n      return () => {\n        deregister();\n      };\n    }\n\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n      const callback = function(eventObj: HammerInput) {\n        zone.runGuarded(function() {\n          handler(eventObj);\n        });\n      };\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback);\n        // destroy mc to prevent memory leak\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n\n  isCustomEvent(eventName: string): boolean {\n    return this._config.events.indexOf(eventName) > -1;\n  }\n}\n\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n */\nexport const HAMMER_PROVIDERS__POST_R3__ = [];\n\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n */\nexport const HAMMER_PROVIDERS__PRE_R3__: Provider[] = [\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    multi: true,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Console, [new Optional(), HAMMER_LOADER]]\n  },\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n];\n\nexport const HAMMER_PROVIDERS = HAMMER_PROVIDERS__PRE_R3__;\n\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\n@NgModule({providers: HAMMER_PROVIDERS__PRE_R3__})\nexport class HammerModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap: {[k: string]: string} = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\n\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS: {[key: string]: (event: KeyboardEvent) => boolean} = {\n  'alt': (event: KeyboardEvent) => event.altKey,\n  'control': (event: KeyboardEvent) => event.ctrlKey,\n  'meta': (event: KeyboardEvent) => event.metaKey,\n  'shift': (event: KeyboardEvent) => event.shiftKey\n};\n\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n@Injectable()\nexport class KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(@Inject(DOCUMENT) doc: any) {\n    super(doc);\n  }\n\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n  supports(eventName: string): boolean {\n    return KeyEventsPlugin.parseEventName(eventName) != null;\n  }\n\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n   */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName)!;\n\n    const outsideHandler =\n        KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n\n    return this.manager.getZone().runOutsideAngular(() => {\n      return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n\n  static parseEventName(eventName: string): {fullKey: string, domEventName: string}|null {\n    const parts: string[] = eventName.toLowerCase().split('.');\n\n    const domEventName = parts.shift();\n    if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const key = KeyEventsPlugin._normalizeKey(parts.pop()!);\n\n    let fullKey = '';\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index: number = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n\n    // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n    //       The code must remain in the `result['domEventName']` form.\n    // return {domEventName, fullKey};\n    const result: {fullKey: string, domEventName: string} = {} as any;\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n\n  static getEventFullKey(event: KeyboardEvent): string {\n    let fullKey = '';\n    let key = getEventKey(event);\n    key = key.toLowerCase();\n    if (key === ' ') {\n      key = 'space';  // for readability\n    } else if (key === '.') {\n      key = 'dot';  // because '.' is used as a separator in event names\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName != key) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          fullKey += modifierName + '.';\n        }\n      }\n    });\n    fullKey += key;\n    return fullKey;\n  }\n\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n  static eventCallback(fullKey: any, handler: Function, zone: NgZone): Function {\n    return (event: any /** TODO #9100 */) => {\n      if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n\n  /** @internal */\n  static _normalizeKey(keyName: string): string {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n      default:\n        return keyName;\n    }\n  }\n}\n\nfunction getEventKey(event: any): string {\n  let key = event.key;\n  if (key == null) {\n    key = event.keyIdentifier;\n    // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n    // Safari cf\n    // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n    if (key == null) {\n      return 'Unidentified';\n    }\n    if (key.startsWith('U+')) {\n      key = String.fromCharCode(parseInt(key.substring(2), 16));\n      if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n        // There is a bug in Chrome for numeric keypad keys:\n        // https://code.google.com/p/chromium/issues/detail?id=155654\n        // 1, 2, 3 ... are reported as A, B, C ...\n        key = (_chromeNumKeyPadMap as any)[key];\n      }\n    }\n  }\n\n  return _keyMap[key] || key;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {forwardRef, Inject, Injectable, Injector, Sanitizer, SecurityContext, ɵ_sanitizeHtml as _sanitizeHtml, ɵ_sanitizeUrl as _sanitizeUrl, ɵallowSanitizationBypassAndThrow as allowSanitizationBypassOrThrow, ɵbypassSanitizationTrustHtml as bypassSanitizationTrustHtml, ɵbypassSanitizationTrustResourceUrl as bypassSanitizationTrustResourceUrl, ɵbypassSanitizationTrustScript as bypassSanitizationTrustScript, ɵbypassSanitizationTrustStyle as bypassSanitizationTrustStyle, ɵbypassSanitizationTrustUrl as bypassSanitizationTrustUrl, ɵBypassType as BypassType, ɵgetSanitizationBypassType as getSanitizationBypassType, ɵunwrapSafeValue as unwrapSafeValue} from '@angular/core';\n\nexport {SecurityContext};\n\n\n\n/**\n * Marker interface for a value that's safe to use in a particular context.\n *\n * @publicApi\n */\nexport interface SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as HTML.\n *\n * @publicApi\n */\nexport interface SafeHtml extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as style (CSS).\n *\n * @publicApi\n */\nexport interface SafeStyle extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as JavaScript.\n *\n * @publicApi\n */\nexport interface SafeScript extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL linking to a document.\n *\n * @publicApi\n */\nexport interface SafeUrl extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL to load executable code from.\n *\n * @publicApi\n */\nexport interface SafeResourceUrl extends SafeValue {}\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl)})\nexport abstract class DomSanitizer implements Sanitizer {\n  /**\n   * Sanitizes a value for use in the given SecurityContext.\n   *\n   * If value is trusted for the context, this method will unwrap the contained safe value and use\n   * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n   * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n   * is responsible to make sure that the value can definitely be safely used in the given context.\n   */\n  abstract sanitize(context: SecurityContext, value: SafeValue|string|null): string|null;\n\n  /**\n   * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n   * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n   * leave safe HTML intact, so in most situations this method should not be used.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustHtml(value: string): SafeHtml;\n\n  /**\n   * Bypass security and trust the given value to be safe style value (CSS).\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustStyle(value: string): SafeStyle;\n\n  /**\n   * Bypass security and trust the given value to be safe JavaScript.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustScript(value: string): SafeScript;\n\n  /**\n   * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n   * in hyperlinks or `<img src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustUrl(value: string): SafeUrl;\n\n  /**\n   * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n   * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl;\n}\n\nexport function domSanitizerImplFactory(injector: Injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\n\n@Injectable({providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector]})\nexport class DomSanitizerImpl extends DomSanitizer {\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n  }\n\n  sanitize(ctx: SecurityContext, value: SafeValue|string|null): string|null {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value as string;\n      case SecurityContext.HTML:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Html)) {\n          return unwrapSafeValue(value);\n        }\n        return _sanitizeHtml(this._doc, String(value));\n      case SecurityContext.STYLE:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Style)) {\n          return unwrapSafeValue(value);\n        }\n        return value as string;\n      case SecurityContext.SCRIPT:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Script)) {\n          return unwrapSafeValue(value);\n        }\n        throw new Error('unsafe value used in a script context');\n      case SecurityContext.URL:\n        const type = getSanitizationBypassType(value);\n        if (allowSanitizationBypassOrThrow(value, BypassType.Url)) {\n          return unwrapSafeValue(value);\n        }\n        return _sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (allowSanitizationBypassOrThrow(value, BypassType.ResourceUrl)) {\n          return unwrapSafeValue(value);\n        }\n        throw new Error(\n            'unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n      default:\n        throw new Error(`Unexpected SecurityContext ${ctx} (see http://g.co/ng/security#xss)`);\n    }\n  }\n\n  bypassSecurityTrustHtml(value: string): SafeHtml {\n    return bypassSanitizationTrustHtml(value);\n  }\n  bypassSecurityTrustStyle(value: string): SafeStyle {\n    return bypassSanitizationTrustStyle(value);\n  }\n  bypassSecurityTrustScript(value: string): SafeScript {\n    return bypassSanitizationTrustScript(value);\n  }\n  bypassSecurityTrustUrl(value: string): SafeUrl {\n    return bypassSanitizationTrustUrl(value);\n  }\n  bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl {\n    return bypassSanitizationTrustResourceUrl(value);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, DOCUMENT, ɵPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {APP_ID, ApplicationModule, createPlatformFactory, ErrorHandler, Inject, ModuleWithProviders, NgModule, NgZone, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, platformCore, PlatformRef, RendererFactory2, Sanitizer, SkipSelf, StaticProvider, Testability, ɵConsole as Console, ɵINJECTOR_SCOPE as INJECTOR_SCOPE, ɵsetDocument} from '@angular/core';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {SERVER_TRANSITION_PROVIDERS, TRANSITION_ID} from './browser/server-transition';\nimport {BrowserGetTestability} from './browser/testability';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {DomRendererFactory2} from './dom/dom_renderer';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_PROVIDERS} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {DomSanitizer, DomSanitizerImpl} from './security/dom_sanitization_service';\n\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n\nexport function _document(): any {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nexport const INTERNAL_BROWSER_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n\nconst BROWSER_SANITIZATION_PROVIDERS__PRE_R3__: StaticProvider[] = [\n  {provide: Sanitizer, useExisting: DomSanitizer},\n  {provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT]},\n];\n\nexport const BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * @publicApi\n */\nexport const BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__PRE_R3__;\n\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nexport const platformBrowser: (extraProviders?: StaticProvider[]) => PlatformRef =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\nexport const BROWSER_MODULE_PROVIDERS: StaticProvider[] = [\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: INJECTOR_SCOPE, useValue: 'root'},\n  {provide: ErrorHandler, useFactory: errorHandler, deps: []},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    multi: true,\n    deps: [DOCUMENT, NgZone, PLATFORM_ID]\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT]},\n  HAMMER_PROVIDERS,\n  {\n    provide: DomRendererFactory2,\n    useClass: DomRendererFactory2,\n    deps: [EventManager, DomSharedStylesHost, APP_ID]\n  },\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT]},\n  {provide: Testability, useClass: Testability, deps: [NgZone]},\n  {provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone]},\n  ELEMENT_PROBE_PROVIDERS,\n];\n\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n@NgModule({providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule]})\nexport class BrowserModule {\n  constructor(@Optional() @SkipSelf() @Inject(BrowserModule) parentModule: BrowserModule|null) {\n    if (parentModule) {\n      throw new Error(\n          `BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n  static withServerTransition(params: {appId: string}): ModuleWithProviders<BrowserModule> {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n        {provide: TRANSITION_ID, useExisting: APP_ID},\n        SERVER_TRANSITION_PROVIDERS,\n      ],\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵDomAdapter as DomAdapter, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, ɵɵinject} from '@angular/core';\n\n/**\n * Represents the attributes of an HTML `<meta>` element. The element itself is\n * represented by the internal `HTMLMetaElement`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see `Meta`\n *\n * @publicApi\n */\nexport type MetaDefinition = {\n  charset?: string;\n  content?: string;\n  httpEquiv?: string;\n  id?: string;\n  itemprop?: string;\n  name?: string;\n  property?: string;\n  scheme?: string;\n  url?: string;\n}&{\n  // TODO(IgorMinar): this type looks wrong\n  [prop: string]: string;\n};\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nexport function createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useFactory: createMeta, deps: []})\nexport class Meta {\n  private _dom: DomAdapter;\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    this._dom = getDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n  addTag(tag: MetaDefinition, forceCreation: boolean = false): HTMLMetaElement|null {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n\n  /**\n   * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * @param tags An array of tag definitions to match or create.\n   * @param forceCreation True to create new elements without checking whether they already exist.\n   * @returns The matching elements if found, or the new elements.\n   */\n  addTags(tags: MetaDefinition[], forceCreation: boolean = false): HTMLMetaElement[] {\n    if (!tags) return [];\n    return tags.reduce((result: HTMLMetaElement[], tag: MetaDefinition) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n      return result;\n    }, []);\n  }\n\n  /**\n   * Retrieves a `<meta>` tag element in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching element, if any.\n   */\n  getTag(attrSelector: string): HTMLMetaElement|null {\n    if (!attrSelector) return null;\n    return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n  }\n\n  /**\n   * Retrieves a set of `<meta>` tag elements in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching elements, if any.\n   */\n  getTags(attrSelector: string): HTMLMetaElement[] {\n    if (!attrSelector) return [];\n    const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n    return list ? [].slice.call(list) : [];\n  }\n\n  /**\n   * Modifies an existing `<meta>` tag element in the current HTML document.\n   * @param tag The tag description with which to replace the existing tag content.\n   * @param selector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n   * replacement tag.\n   * @return The modified element.\n   */\n  updateTag(tag: MetaDefinition, selector?: string): HTMLMetaElement|null {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const meta: HTMLMetaElement = this.getTag(selector)!;\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n    return this._getOrCreateElement(tag, true);\n  }\n\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param attrSelector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   */\n  removeTag(attrSelector: string): void {\n    this.removeTagElement(this.getTag(attrSelector)!);\n  }\n\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param meta The tag definition to match against to identify an existing tag.\n   */\n  removeTagElement(meta: HTMLMetaElement): void {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n\n  private _getOrCreateElement(meta: MetaDefinition, forceCreation: boolean = false):\n      HTMLMetaElement {\n    if (!forceCreation) {\n      const selector: string = this._parseSelector(meta);\n      const elem: HTMLMetaElement = this.getTag(selector)!;\n      // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n      if (elem && this._containsAttributes(meta, elem)) return elem;\n    }\n    const element: HTMLMetaElement = this._dom.createElement('meta') as HTMLMetaElement;\n    this._setMetaElementAttributes(meta, element);\n    const head = this._doc.getElementsByTagName('head')[0];\n    head.appendChild(element);\n    return element;\n  }\n\n  private _setMetaElementAttributes(tag: MetaDefinition, el: HTMLMetaElement): HTMLMetaElement {\n    Object.keys(tag).forEach((prop: string) => el.setAttribute(prop, tag[prop]));\n    return el;\n  }\n\n  private _parseSelector(tag: MetaDefinition): string {\n    const attr: string = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n\n  private _containsAttributes(tag: MetaDefinition, elem: HTMLMetaElement): boolean {\n    return Object.keys(tag).every((key: string) => elem.getAttribute(key) === tag[key]);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, ɵɵinject} from '@angular/core';\n\n\n/**\n * Factory to create Title service.\n */\nexport function createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useFactory: createTitle, deps: []})\nexport class Title {\n  constructor(@Inject(DOCUMENT) private _doc: any) {}\n  /**\n   * Get the title of the current HTML document.\n   */\n  getTitle(): string {\n    return this._doc.title;\n  }\n\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n  setTitle(newTitle: string) {\n    this._doc.title = newTitle || '';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst win = typeof window !== 'undefined' && window || <any>{};\nexport {win as window};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {ApplicationRef, ComponentRef} from '@angular/core';\nimport {window} from './browser';\n\nexport class ChangeDetectionPerfRecord {\n  constructor(public msPerTick: number, public numTicks: number) {}\n}\n\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nexport class AngularProfiler {\n  appRef: ApplicationRef;\n\n  constructor(ref: ComponentRef<any>) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config: any): ChangeDetectionPerfRecord {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n    const isProfilerAvailable = window.console.profile != null;\n    if (record && isProfilerAvailable) {\n      window.console.profile(profileName);\n    }\n    const start = getDOM().performanceNow();\n    let numTicks = 0;\n    while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = getDOM().performanceNow();\n    if (record && isProfilerAvailable) {\n      window.console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    window.console.log(`ran ${numTicks} change detection cycles`);\n    window.console.log(`${msPerTick.toFixed(2)} ms per check`);\n\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {APP_ID, Injectable, NgModule} from '@angular/core';\n\nexport function escapeHtml(text: string): string {\n  const escapedText: {[k: string]: string} = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;',\n  };\n  return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\n\nexport function unescapeHtml(text: string): string {\n  const unescapedText: {[k: string]: string} = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>',\n  };\n  return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n\n/**\n * A type-safe key to use with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nexport type StateKey<T> = string&{__not_a_string: never};\n\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nexport function makeStateKey<T = void>(key: string): StateKey<T> {\n  return key as StateKey<T>;\n}\n\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialzied in a\n * non-lossy manner.\n *\n * @publicApi\n */\n@Injectable()\nexport class TransferState {\n  private store: {[k: string]: {}|undefined} = {};\n  private onSerializeCallbacks: {[k: string]: () => {} | undefined} = {};\n\n  /** @internal */\n  static init(initState: {}) {\n    const transferState = new TransferState();\n    transferState.store = initState;\n    return transferState;\n  }\n\n  /**\n   * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n   */\n  get<T>(key: StateKey<T>, defaultValue: T): T {\n    return this.store[key] !== undefined ? this.store[key] as T : defaultValue;\n  }\n\n  /**\n   * Set the value corresponding to a key.\n   */\n  set<T>(key: StateKey<T>, value: T): void {\n    this.store[key] = value;\n  }\n\n  /**\n   * Remove a key from the store.\n   */\n  remove<T>(key: StateKey<T>): void {\n    delete this.store[key];\n  }\n\n  /**\n   * Test whether a key exists in the store.\n   */\n  hasKey<T>(key: StateKey<T>) {\n    return this.store.hasOwnProperty(key);\n  }\n\n  /**\n   * Register a callback to provide the value for a key when `toJson` is called.\n   */\n  onSerialize<T>(key: StateKey<T>, callback: () => T): void {\n    this.onSerializeCallbacks[key] = callback;\n  }\n\n  /**\n   * Serialize the current state of the store to JSON.\n   */\n  toJson(): string {\n    // Call the onSerialize callbacks and put those values into the store.\n    for (const key in this.onSerializeCallbacks) {\n      if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n        try {\n          this.store[key] = this.onSerializeCallbacks[key]();\n        } catch (e) {\n          console.warn('Exception in onSerialize callback: ', e);\n        }\n      }\n    }\n    return JSON.stringify(this.store);\n  }\n}\n\nexport function initTransferState(doc: Document, appId: string) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  const script = doc.getElementById(appId + '-state');\n  let initialState = {};\n  if (script && script.textContent) {\n    try {\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n  return TransferState.init(initialState);\n}\n\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\n@NgModule({\n  providers: [{provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID]}],\n})\nexport class BrowserTransferStateModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {DebugElement, DebugNode, Predicate, Type} from '@angular/core';\n\n\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nexport class By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all(): Predicate<DebugNode> {\n    return () => true;\n  }\n\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector: string): Predicate<DebugElement> {\n    return (debugElement) => {\n      return debugElement.nativeElement != null ?\n          elementMatches(debugElement.nativeElement, selector) :\n          false;\n    };\n  }\n\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type: Type<any>): Predicate<DebugNode> {\n    return (debugNode) => debugNode.providerTokens!.indexOf(type) !== -1;\n  }\n}\n\nfunction elementMatches(n: any, selector: string): boolean {\n  if (getDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) ||\n        n.msMatchesSelector && n.msMatchesSelector(selector) ||\n        n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('10.2.5');\n","import {NgModule} from '@angular/core';\nimport {SwipeAngularListComponent} from './swipe-angular-list.component';\nimport {ItemListComponent} from './item-list/item-list.component';\nimport {CommonModule} from '@angular/common';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig} from '@angular/platform-browser';\n\nexport class HammerConfig extends HammerGestureConfig {\n  overrides = {\n    pinch: {enable: false},\n    rotate: {enable: false}\n  };\n}\n\n@NgModule({\n  declarations: [SwipeAngularListComponent, ItemListComponent],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerConfig\n    }\n  ],\n  exports: [SwipeAngularListComponent, ItemListComponent]\n})\nexport class SwipeAngularListModule {\n}\n"]}